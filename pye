#!/usr/bin/env python
##!/home/vagrant/myve/bin/python

import os
import ConfigParser as cp
import sys
import inspect
import logging


try:
    import argcomplete
except ImportError:
    class argcomplete(object):
        @staticmethod
        def autocomplete(x):
            pass


#logging.basicConfig(filename='pyexpo.log', level=logging.DEBUG)


#logger = logging.getLogger(__name__)

settings_path = os.path.expanduser('~/.pyexpo')
#expo_location = '~/projects/py'
current_dir = os.path.dirname(os.path.abspath(__file__))
#sys.path.insert(0, os.path.expanduser(expo_location))
sys.path.insert(0, os.path.dirname(current_dir))
from expo import lib as el


cfgparser = cp.ConfigParser()
cfgparser.read([settings_path])
paths = [os.path.expanduser(p) for p in cfgparser.get('DEFAULT', 'paths').split(':')]

parser = el.build_parser2(paths)
#logger.debug("parser is built")

#logger.debug("before autocomplete call...")
argcomplete.autocomplete(parser)
#with open('/home/vagrant/pyexpo-output', 'w') as w:
#    w.write('!')

namespace = parser.parse_args()
namespace.__call(namespace)
